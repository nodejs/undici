name: Release undici and undici-types on NPM and create GitHub Release

on:
  push:
    branches:
     - main
    paths:
      - package.json

permissions:
  contents: read

jobs:
  determine-release-version:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.determine-release-version.outputs.result }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        id: checkout
        with:
          persist-credentials: false
      - name: Determine release version
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: determine-release-version
        with:
          result-encoding: string
          script: |
            const { owner, repo } = context.repo
            const version = require("./package.json").version
            const versionTag = `v${version}`

            const { data: releases } = await github.rest.repos.listReleases({
              owner,
              repo
            })

            const previousRelease = releases.find((r) => r.tag_name.startsWith('v7'))

            if (versionTag !== previousRelease?.tag_name) {
              return versionTag
            }

  release:
    runs-on: ubuntu-latest
    needs: determine-release-version
    if: ${{ startsWith(needs.determine-release-version.outputs.release-version, 'v') }}

    permissions:
      contents: write
      id-token: write

    environment: release

    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        id: checkout
        with:
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: 'lts/*'
          registry-url: 'https://registry.npmjs.org'

      - name: Install globally latest npm
        run: npm install -g npm@latest
        id: install-globally-latest-npm

      - name: Install dependencies
        run: npm install
        id: install-dependencies

      - name: Publish undici on NPM
        run: npm publish --access public
        id: npm-publish-undici

      - name: Generate Types Package
        run: node scripts/generate-undici-types-package-json.js
        id: generate-types-package

      - name: Publish undici-types on NPM
        run: npm publish
        id: npm-publish-undici-types
        working-directory: './types'

      - name: Create GitHub release
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: create-gh-release
        with:
          script: |
            const defaultBranch = "${{ github.event.repository.default_branch }}"
            const versionTag = "${{ needs.determine-release-version.outputs.release-version }}"
            await require('./scripts/release').release({ github, context, defaultBranch, versionTag })
