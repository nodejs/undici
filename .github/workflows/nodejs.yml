name: Node.js

on:
  workflow_call:
    inputs:
      node-version:
        required: true
        type: string
      runs-on:
        required: true
        type: string
      codecov:
        required: false
        type: boolean
        default: false

permissions:
  contents: read

jobs:
  test:
    name: Test with Node.js ${{ inputs.node-version }} on ${{ inputs.runs-on }}
    timeout-minutes: 20
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          submodules: recursive

      - name: Setup Node.js@${{ inputs.node-version }}
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: ${{ inputs.node-version }}

      - name: Print version information
        run: |
          echo OS: $(node -p "os.version()")
          echo Node.js: $(node --version)
          echo "Node.js built-in dependencies: $(node -p "'\r\n' + (Object.entries(process.versions).map(([k, v], i, arr) => (i !== arr.length - 1 ? '├──' : '└──') + k + '@' + v)).join('\r\n')")"
          echo npm: $(npm --version)
          echo git: $(git --version)

      - name: Install dependencies
        run: npm install

      - name: Print installed dependencies
        run: npm ls --all
        continue-on-error: true

      - name: Configure hosts file for WPT (Windows)
        if: runner.os == 'Windows'
        run: |
          cd ${{ github.workspace }}\test\web-platform-tests\wpt
          python wpt make-hosts-file | Out-File $env:SystemRoot\System32\drivers\etc\hosts -Encoding ascii -Append
        shell: powershell

      - name: Configure hosts file for WPT (Unix)
        if: runner.os != 'Windows'
        run: |
          cd ${{ github.workspace }}/test/web-platform-tests/wpt
          python3 wpt make-hosts-file | sudo tee -a /etc/hosts

      - name: Generate PEM files
        run: npm run generate-pem
        id: generate-pem
      
      - name: Test unit
        run: npm run test:unit
        id: test-unit
        env:
          CI: true
          NODE_V8_COVERAGE: ${{ inputs.codecov == true && './coverage/tmp' || '' }} 
      
      - name: Test node-fetch
        run: npm run test:node-fetch
        id: test-node-fetch
        env:
          CI: true
          NODE_V8_COVERAGE: ${{ inputs.codecov == true && './coverage/tmp' || '' }} 
      
      - name: Test cache
        run: npm run test:cache
        id: test-cache
        env:
          CI: true
          NODE_V8_COVERAGE: ${{ inputs.codecov == true && './coverage/tmp' || '' }} 
      
      - name: Test cache-interceptor
        run: npm run test:cache-interceptor
        id: test-cache-interceptor
        env:
          CI: true
          NODE_V8_COVERAGE: ${{ inputs.codecov == true && './coverage/tmp' || '' }} 
      
      - name: Test interceptors
        run: npm run test:interceptors
        id: test-interceptors
        env:
          CI: true
          NODE_V8_COVERAGE: ${{ inputs.codecov == true && './coverage/tmp' || '' }} 
      
      - name: Test fetch
        run: npm run test:fetch
        id: test-fetch
        env:
          CI: true
          NODE_V8_COVERAGE: ${{ inputs.codecov == true && './coverage/tmp' || '' }} 
      
      - name: Test cookies
        run: npm run test:cookies
        id: test-cookies
        env:
          CI: true
          NODE_V8_COVERAGE: ${{ inputs.codecov == true && './coverage/tmp' || '' }} 
      
      - name: Test eventsource
        run: npm run test:eventsource
        id: test-eventsource
        env:
          CI: true
          NODE_V8_COVERAGE: ${{ inputs.codecov == true && './coverage/tmp' || '' }} 
      
      - name: Test infra
        run: npm run test:infra
        id: test-infra
        env:
          CI: true
          NODE_V8_COVERAGE: ${{ inputs.codecov == true && './coverage/tmp' || '' }} 

      - name: Test subresource-integrity
        run: npm run test:subresource-integrity
        id: test-subresource-integrity
        env:
          CI: true
          NODE_V8_COVERAGE: ${{ inputs.codecov == true && './coverage/tmp' || '' }} 
      
      - name: Test websocket
        run: npm run test:websocket
        id: test-websocket
        env:
          CI: true
          NODE_V8_COVERAGE: ${{ inputs.codecov == true && './coverage/tmp' || '' }} 
      
      - name: Test node-test
        run: npm run test:node-test
        id: test-node-test
        env:
          CI: true
          NODE_V8_COVERAGE: ${{ inputs.codecov == true && './coverage/tmp' || '' }} 
      
      - name: Test cache-tests
        run: npm run test:cache-tests
        id: test-cache-tests
        env:
          CI: true
          NODE_V8_COVERAGE: ${{ inputs.codecov == true && './coverage/tmp' || '' }} 
      
      - name: Test h2
        run: npm run test:h2
        id: test-h2
        env:
          CI: true
          NODE_V8_COVERAGE: ${{ inputs.codecov == true && './coverage/tmp' || '' }} 
      
      - name: Test jest
        run: npm run test:jest
        id: test-jest
        env:
          CI: true
          NODE_V8_COVERAGE: ''

      - name: Test sqlite
        if: inputs.node-version != '20'
        run: npm run test:sqlite
        id: test-sqlite
        env:
          CI: true
          NODE_V8_COVERAGE: ${{ inputs.codecov == true && './coverage/tmp' || '' }} 
      
      - name: Test wpt
        run: npm run test:wpt
        id: test-wpt
        env:
          CI: true
          NODE_V8_COVERAGE: ${{ inputs.codecov == true && './coverage/tmp' || '' }} 

      - name: Coverage Report
        if: inputs.codecov == true
        uses: codecov/codecov-action@fdcc8476540edceab3de004e990f80d881c6cc00 # v5.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
